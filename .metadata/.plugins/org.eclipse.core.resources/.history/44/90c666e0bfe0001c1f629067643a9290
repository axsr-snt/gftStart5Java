package interfaceMap;

import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;

public class MetodosMap {
	
	public static void main(String[] args) {
		
		//Map carrosPopulares2020 = new HashMap(); //antes do java 5
		//Map<String, Double> carrosPopulares = new HashMap<>(); //Generics(jdk 5) - Diamont Operator(jdk 7)
		//HashMap<String, Double> carrosPopulares = new HashMap<>();
		//Map<String, Double> carrosPopulares2020 = Map.of("gol", 14.4, "uno", 15.6, "mobi", 16.1, "hb20", 14.5, "kwid", 15.6)
	
	Map<String, Double> carrosPop = new HashMap<>();
		carrosPop.put("Gol", 14.4);
		carrosPop.put("Uno", 15.6);
		carrosPop.put("Mobi", 16.1);
		carrosPop.put("HB20", 14.5);
		carrosPop.put("Kwid", 15.6);
	System.out.println("\nCarros populares: " + carrosPop.toString());
	
	//substituindo um valor de uma chave
	carrosPop.put("Gol", 15.2);
	System.out.println("\nLista com o Gol atualizado: " + carrosPop.toString());
	
	//consultar se a chave tucson está no dicionario
	boolean status = carrosPop.containsKey("Tucson");
	System.out.println("\nContém o carro Tucson no dicionario? " + status);
	
	//exibindo o valor de uma chave
	double i = carrosPop.get("Uno");
	System.out.println("\nO consumo do Uno é de: " + i);
	
	//exibir as chaves do dicionario
	Set<String> chaves = carrosPop.keySet();
	System.out.println("\nO conjunto de chaves do dicionario são: " + chaves);
	
	//exibir os valores do dicionario
	Collection<Double> valores = carrosPop.values();
	System.out.println("\nO conjunto de valores que o dicionário possui são: " + valores);
	
	//exibir a chave e o valor do modelo mais economico
	double eco = Collections.max(carrosPop.values());
	Set<Map.Entry<String, Double>> entries = carrosPop.entrySet();
	String modEco = "";
	for(Map.Entry<String, Double> entry : entries) {
		if(entry.getValue().equals(eco)) {
			modEco = entry.getKey();
		}
	}
	System.out.println("\nO modelo mais economico é: " + modEco + " que faz " + eco + " km por litro");
	
	//exibir a chave e o valor do modelo menos economico
	double con = Collections.min(carrosPop.values());
	String modCon = "";
	for(Map.Entry<String, Double> entry : entries) {
		if(entry.getValue().equals(con)) {
			modCon = entry.getKey();
		}
	}
	System.out.println("\nO modelo menos economico é: " + modCon + " que faz " + con + " km por litro");
	
	//exibir a média da km/l
	Iterator<Double> iterator = carrosPop.values().iterator();
	double j = 0d;
	while(iterator.hasNext()) {
		j += iterator.next();
	}
	double med2 = j/carrosPop.size();
	
	System.out.println("\nA média de consumo dos carros populares é: " + med2);
	
	//remover os registros onde a km/l é igual a 15.6
	Iterator<Double> iterator1 = carrosPop.values().iterator();
	while(iterator1.hasNext()) {
		if(iterator1.next().equals(15.6))
			iterator1.remove();
	}
	System.out.println("\nA lista atualizada de carros é: " + carrosPop);
	
	//exibir o dicionario na ordem de inserção
	Map<String, Double> carrosPop2 = new LinkedHashMap<>(carrosPop);
	
	System.out.println("\nDicionario na ordem de inserção" + carrosPop2);
	}
}
